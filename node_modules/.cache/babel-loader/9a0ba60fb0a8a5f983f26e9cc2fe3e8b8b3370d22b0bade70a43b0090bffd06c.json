{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task Management\\\\frontend\\\\src\\\\components\\\\TaskDashboard.jsx\",\n  _s = $RefreshSig$();\n// filepath: /d:/Task Management/frontend/src/components/TaskDashboard.jsx\nimport React, { useState, useEffect } from 'react';\nimport { PlusIcon, XIcon } from 'lucide-react';\nimport { Alert, AlertDescription } from './Alert';\nimport StatusDropdown from './statusDropdown';\nimport { database } from '../../backend/firebaseConfig';\nimport { ref, set, push, onValue, remove, update } from 'firebase/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskDashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [newTask, setNewTask] = useState({\n    name: '',\n    status: 'Pending'\n  });\n  const [notification, setNotification] = useState(null);\n  useEffect(() => {\n    const tasksRef = ref(database, 'tasks');\n    onValue(tasksRef, snapshot => {\n      const data = snapshot.val();\n      if (data) {\n        setTasks(Object.keys(data).map(key => ({\n          id: key,\n          ...data[key]\n        })));\n      }\n    });\n  }, []);\n  const showNotification = message => {\n    setNotification(message);\n    setTimeout(() => setNotification(null), 3000);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const taskRef = push(ref(database, 'tasks'));\n    const task = {\n      id: taskRef.key,\n      ...newTask,\n      created_at: new Date().toISOString()\n    };\n    set(taskRef, task);\n    setNewTask({\n      name: '',\n      status: 'Pending'\n    });\n    setIsModalOpen(false);\n    showNotification('Task added successfully!');\n  };\n  const handleDelete = id => {\n    const taskRef = ref(database, `tasks/${id}`);\n    remove(taskRef);\n    showNotification('Task deleted successfully!');\n  };\n  const handleStatusChange = (id, newStatus) => {\n    const taskRef = ref(database, `tasks/${id}`);\n    update(taskRef, {\n      status: newStatus\n    });\n    showNotification('Task status updated!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-4 sm:p-6 lg:p-8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskDashboard, \"uwCJsQrTotuQ5qpyk7D35nLC3io=\");\n_c = TaskDashboard;\nexport default TaskDashboard;\nvar _c;\n$RefreshReg$(_c, \"TaskDashboard\");","map":{"version":3,"names":["React","useState","useEffect","PlusIcon","XIcon","Alert","AlertDescription","StatusDropdown","database","ref","set","push","onValue","remove","update","jsxDEV","_jsxDEV","TaskDashboard","_s","tasks","setTasks","isModalOpen","setIsModalOpen","newTask","setNewTask","name","status","notification","setNotification","tasksRef","snapshot","data","val","Object","keys","map","key","id","showNotification","message","setTimeout","handleSubmit","e","preventDefault","taskRef","task","created_at","Date","toISOString","handleDelete","handleStatusChange","newStatus","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Task Management/frontend/src/components/TaskDashboard.jsx"],"sourcesContent":["// filepath: /d:/Task Management/frontend/src/components/TaskDashboard.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { PlusIcon, XIcon } from 'lucide-react';\r\nimport { Alert, AlertDescription } from './Alert';\r\nimport StatusDropdown from './statusDropdown';\r\nimport { database } from '../../backend/firebaseConfig';\r\nimport { ref, set, push, onValue, remove, update } from 'firebase/database';\r\n\r\nconst TaskDashboard = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [newTask, setNewTask] = useState({ name: '', status: 'Pending' });\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const tasksRef = ref(database, 'tasks');\r\n    onValue(tasksRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      if (data) {\r\n        setTasks(Object.keys(data).map(key => ({ id: key, ...data[key] })));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const showNotification = (message) => {\r\n    setNotification(message);\r\n    setTimeout(() => setNotification(null), 3000);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const taskRef = push(ref(database, 'tasks'));\r\n    const task = {\r\n      id: taskRef.key,\r\n      ...newTask,\r\n      created_at: new Date().toISOString()\r\n    };\r\n    set(taskRef, task);\r\n    setNewTask({ name: '', status: 'Pending' });\r\n    setIsModalOpen(false);\r\n    showNotification('Task added successfully!');\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const taskRef = ref(database, `tasks/${id}`);\r\n    remove(taskRef);\r\n    showNotification('Task deleted successfully!');\r\n  };\r\n\r\n  const handleStatusChange = (id, newStatus) => {\r\n    const taskRef = ref(database, `tasks/${id}`);\r\n    update(taskRef, { status: newStatus });\r\n    showNotification('Task status updated!');\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-4 sm:p-6 lg:p-8\">\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}