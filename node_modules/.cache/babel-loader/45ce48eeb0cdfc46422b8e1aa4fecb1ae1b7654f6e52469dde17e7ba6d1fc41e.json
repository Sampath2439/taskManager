{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task Management\\\\frontend\\\\src\\\\components\\\\statusDropdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatusDropdown = ({\n  status,\n  onStatusChange\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [dropdownWidth, setDropdownWidth] = useState('auto');\n  const dropdownRef = useRef(null);\n  const measureRef = useRef(null);\n  const getStatusColor = status => {\n    switch (status) {\n      case 'Completed':\n        return 'bg-green-100 text-green-800';\n      case 'In Progress':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'Pending':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  useEffect(() => {\n    if (measureRef.current) {\n      setDropdownWidth(measureRef.current.offsetWidth);\n    }\n  }, [isOpen]);\n  const statusOptions = ['Pending', 'In Progress', 'Completed'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsOpen(!isOpen),\n      className: `${getStatusColor(status)} inline-flex items-center px-3 py-1 rounded-full text-sm font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500`,\n      children: [status, /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: `w-4 h-4 ml-2 transition-transform ${isOpen ? 'rotate-180' : ''}`,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M19 9l-7 7-7-7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mt-2 rounded-lg shadow-lg bg-white ring-1 ring-black ring-opacity-5 z-50\",\n      style: {\n        width: dropdownWidth\n      },\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"py-0\",\n        role: \"menu\",\n        children: statusOptions.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n          ref: measureRef,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              onStatusChange(option);\n              setIsOpen(false);\n            },\n            className: `${status === option ? '' : ''} text-center block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100`,\n            role: \"menuitem\",\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this)\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(StatusDropdown, \"9MGKSea+V6TP4oKqbn0DLKYpuHE=\");\n_c = StatusDropdown;\nexport default StatusDropdown;\nvar _c;\n$RefreshReg$(_c, \"StatusDropdown\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","StatusDropdown","status","onStatusChange","_s","isOpen","setIsOpen","dropdownWidth","setDropdownWidth","dropdownRef","measureRef","getStatusColor","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","offsetWidth","statusOptions","className","ref","children","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","style","width","role","map","option","_c","$RefreshReg$"],"sources":["D:/Task Management/frontend/src/components/statusDropdown.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst StatusDropdown = ({ status, onStatusChange }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [dropdownWidth, setDropdownWidth] = useState('auto');\r\n    const dropdownRef = useRef(null);\r\n    const measureRef = useRef(null);\r\n\r\n    const getStatusColor = (status) => {\r\n        switch(status) {\r\n            case 'Completed':\r\n                return 'bg-green-100 text-green-800';\r\n            case 'In Progress':\r\n                return 'bg-yellow-100 text-yellow-800';\r\n            case 'Pending':\r\n                return 'bg-red-100 text-red-800';\r\n            default:\r\n                return 'bg-gray-100 text-gray-800';\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n                setIsOpen(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (measureRef.current) {\r\n            setDropdownWidth(measureRef.current.offsetWidth);\r\n        }\r\n    }, [isOpen]);\r\n\r\n    const statusOptions = ['Pending', 'In Progress', 'Completed'];\r\n\r\n    return (\r\n        <div className=\"relative\" ref={dropdownRef}>\r\n            <button\r\n                onClick={() => setIsOpen(!isOpen)}\r\n                className={`${getStatusColor(status)} inline-flex items-center px-3 py-1 rounded-full text-sm font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500`}\r\n            >\r\n                {status}\r\n                <svg\r\n                    className={`w-4 h-4 ml-2 transition-transform ${isOpen ? 'rotate-180' : ''}`}\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                >\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                </svg>\r\n            </button>\r\n\r\n            {isOpen && (\r\n                <div className=\"flex mt-2 rounded-lg shadow-lg bg-white ring-1 ring-black ring-opacity-5 z-50\" style={{ width: dropdownWidth }}>\r\n                    <ul className=\"py-0\" role=\"menu\">\r\n                        {statusOptions.map((option) => (\r\n                            <li key={option} ref={measureRef}>\r\n                                <button\r\n                                    onClick={() => {\r\n                                        onStatusChange(option);\r\n                                        setIsOpen(false);\r\n                                    }}\r\n                                    className={`${\r\n                                        status === option ? '' : ''\r\n                                    } text-center block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100`}\r\n                                    role=\"menuitem\"\r\n                                >\r\n                                    {option}\r\n                                </button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatusDropdown;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}