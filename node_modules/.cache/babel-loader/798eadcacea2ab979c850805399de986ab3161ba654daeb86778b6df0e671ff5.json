{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task Management\\\\frontend\\\\src\\\\components\\\\statusDropdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatusDropdown = ({\n  status,\n  onStatusChange\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef(null);\n  const getStatusColor = status => {\n    switch (status) {\n      case 'Completed':\n        return 'bg-green-100 text-green-800';\n      case 'In Progress':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'Pending':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const statusOptions = ['Pending', 'In Progress', 'Completed'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsOpen(!isOpen),\n      className: `${getStatusColor(status)} inline-flex items-center px-3 py-1 rounded-full text-sm font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500`,\n      children: [status, /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: `w-4 h-4 ml-2 transition-transform ${isOpen ? 'rotate-180' : ''}`,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M19 9l-7 7-7-7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"static justify-items-center mt-2 w-56 rounded-lg shadow-lg bg-white ring-1 ring-black ring-opacity-5 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"py-1\",\n        role: \"menu\",\n        children: statusOptions.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              onStatusChange(option);\n              setIsOpen(false);\n            },\n            className: `${status === option ? 'bg-gray-100' : ''} w-full text-left block px- py-2 text-sm text-gray-700 hover:bg-gray-100`,\n            role: \"menuitem\",\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(StatusDropdown, \"uhOyve9TWk+bvhPJTPlaMsUEQAY=\");\n_c = StatusDropdown;\nexport default StatusDropdown;\nvar _c;\n$RefreshReg$(_c, \"StatusDropdown\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","StatusDropdown","status","onStatusChange","_s","isOpen","setIsOpen","dropdownRef","getStatusColor","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","statusOptions","className","ref","children","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","role","map","option","_c","$RefreshReg$"],"sources":["D:/Task Management/frontend/src/components/statusDropdown.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst StatusDropdown = ({ status, onStatusChange }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n\r\n  const getStatusColor = (status) => {\r\n    switch(status) {\r\n      case 'Completed':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'In Progress':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'Pending':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  const statusOptions = ['Pending', 'In Progress', 'Completed'];\r\n\r\n  return (\r\n    <div className=\"relative\" ref={dropdownRef}>\r\n      <button\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className={`${getStatusColor(status)} inline-flex items-center px-3 py-1 rounded-full text-sm font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500`}\r\n      >\r\n        {status}\r\n        <svg\r\n          className={`w-4 h-4 ml-2 transition-transform ${isOpen ? 'rotate-180' : ''}`}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke=\"currentColor\"\r\n        >\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n        </svg>\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <div className=\"static justify-items-center mt-2 w-56 rounded-lg shadow-lg bg-white ring-1 ring-black ring-opacity-5 z-50\">\r\n          <ul className=\"py-1\" role=\"menu\">\r\n            {statusOptions.map((option) => (\r\n              <li key={option}>\r\n                <button\r\n                  onClick={() => {\r\n                    onStatusChange(option);\r\n                    setIsOpen(false);\r\n                  }}\r\n                  className={`${\r\n                    status === option ? 'bg-gray-100' : ''\r\n                  } w-full text-left block px- py-2 text-sm text-gray-700 hover:bg-gray-100`}\r\n                  role=\"menuitem\"\r\n                >\r\n                  {option}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusDropdown;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}