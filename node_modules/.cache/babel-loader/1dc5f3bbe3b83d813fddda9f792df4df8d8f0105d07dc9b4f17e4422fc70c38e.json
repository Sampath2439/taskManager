{"ast":null,"code":"import _objectSpread from\"D:/Task Management/taskManager/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{PlusIcon,XIcon}from'lucide-react';import{Alert,AlertDescription}from'./Alert';import StatusDropdown from'./statusDropdown';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL='http://localhost:5000/api/tasks';const TaskDashboard=()=>{const[tasks,setTasks]=useState([]);const[isModalOpen,setIsModalOpen]=useState(false);const[newTask,setNewTask]=useState({name:'',status:'Pending'});const[notification,setNotification]=useState(null);const fetchTasks=async()=>{try{const response=await fetch(API_URL);const data=await response.json();setTasks(data);}catch(error){console.error('Error fetching tasks:',error);showNotification('Error fetching tasks!');}};useEffect(()=>{fetchTasks();const interval=setInterval(fetchTasks,5000);return()=>clearInterval(interval);},[]);const showNotification=message=>{setNotification(message);setTimeout(()=>setNotification(null),3000);};const handleSubmit=async e=>{e.preventDefault();const task={name:newTask.name,status:newTask.status};try{const response=await fetch(API_URL,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(task)});if(!response.ok)throw new Error('Failed to add task');await fetchTasks();setNewTask({name:'',status:'Pending'});setIsModalOpen(false);showNotification('Task added successfully!');}catch(error){console.error('Error adding task:',error);showNotification('Error adding task!');}};const handleDelete=async id=>{try{const response=await fetch(\"\".concat(API_URL,\"/\").concat(id),{method:'DELETE'});if(!response.ok)throw new Error('Failed to delete task');await fetchTasks();showNotification('Task deleted successfully!');}catch(error){console.error('Error deleting task:',error);showNotification('Error deleting task!');}};const handleStatusChange=async(id,newStatus)=>{try{const response=await fetch(\"\".concat(API_URL,\"/\").concat(id),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({status:newStatus,completed_at:newStatus==='Completed'?new Date().toISOString():null})});if(!response.ok)throw new Error('Failed to update task status');await fetchTasks();showNotification(newStatus==='Completed'?'Task marked as completed!':'Task status updated!');}catch(error){console.error('Error updating task status:',error);showNotification('Error updating task status!');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-100 p-4 sm:p-6 lg:p-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 flex flex-col sm:flex-row sm:justify-between sm:items-center gap-4\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl sm:text-3xl font-bold text-gray-800\",children:\"Task Dashboard\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setIsModalOpen(true),className:\"bg-blue-600 text-white px-4 py-2 rounded-lg flex items-center justify-center sm:justify-start gap-2 hover:bg-blue-700 transition w-full sm:w-auto\",children:[/*#__PURE__*/_jsx(PlusIcon,{size:20}),\"Add Task\"]})]}),notification&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed top-4 right-4 left-4 sm:left-auto z-50\",children:/*#__PURE__*/_jsx(Alert,{className:\"bg-green-100 border-green-400 text-green-800\",children:/*#__PURE__*/_jsx(AlertDescription,{children:notification})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"hidden md:block\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Task Name\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Created At\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Completed At\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white divide-y divide-gray-200\",children:tasks.map((task,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:task.status==='Completed'?'line-through text-gray-400':'',children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-4 sm:px-6 py-4 whitespace-nowrap text-sm\",children:index+1}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 sm:px-6 py-4 whitespace-nowrap text-sm\",children:task.name}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 sm:px-6 py-4 whitespace-nowrap\",children:/*#__PURE__*/_jsx(StatusDropdown,{status:task.status,onStatusChange:newStatus=>handleStatusChange(task.id,newStatus)})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 sm:px-6 py-4 whitespace-nowrap text-sm\",children:task.created_at?new Date(task.created_at._seconds*1000).toLocaleString():'N/A'}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 sm:px-6 py-4 whitespace-nowrap text-sm\",children:task.completed_at?new Date(task.completed_at._seconds*1000).toLocaleString():'To be Completed'}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 sm:px-6 py-4 whitespace-nowrap text-sm\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(task.id),className:\"text-red-600 hover:text-red-900\",children:\"Delete\"})})]},task.id))})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"md:hidden\",children:tasks.map((task,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-b \".concat(task.status==='Completed'?'line-through text-gray-400':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-500\",children:[\"#\",index+1]}),/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-gray-900\",children:task.name})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(task.id),className:\"text-red-600 hover:text-red-900 text-sm\",children:\"Delete\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-500\",children:\"Status:\"}),/*#__PURE__*/_jsx(StatusDropdown,{status:task.status,onStatusChange:newStatus=>handleStatusChange(task.id,newStatus)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500\",children:[\"Created: \",new Date().toLocaleString()]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500\",children:[\"Completed: \",task.completed_at?new Date(task.completed_at).toLocaleString():'To be Completed']})]})]},task.id))})]}),isModalOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg p-6 w-full max-w-md\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl sm:text-2xl font-bold\",children:\"Add New Task\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsModalOpen(false),className:\"text-gray-500 hover:text-gray-700\",children:/*#__PURE__*/_jsx(XIcon,{size:24})})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 text-sm font-bold mb-2\",children:\"Task Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newTask.name,onChange:e=>setNewTask(_objectSpread(_objectSpread({},newTask),{},{name:e.target.value})),className:\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 text-sm font-bold mb-2\",children:\"Status\"}),/*#__PURE__*/_jsxs(\"select\",{value:newTask.status,onChange:e=>setNewTask(_objectSpread(_objectSpread({},newTask),{},{status:e.target.value})),className:\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"Pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"In Progress\",children:\"In Progress\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Completed\",children:\"Completed\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col sm:flex-row justify-end gap-3\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setIsModalOpen(false),className:\"px-4 py-2 text-gray-600 hover:text-gray-800 order-2 sm:order-1\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 order-1 sm:order-2\",children:\"Add Task\"})]})]})]})})]});};export default TaskDashboard;","map":{"version":3,"names":["React","useState","useEffect","PlusIcon","XIcon","Alert","AlertDescription","StatusDropdown","jsx","_jsx","jsxs","_jsxs","API_URL","TaskDashboard","tasks","setTasks","isModalOpen","setIsModalOpen","newTask","setNewTask","name","status","notification","setNotification","fetchTasks","response","fetch","data","json","error","console","showNotification","interval","setInterval","clearInterval","message","setTimeout","handleSubmit","e","preventDefault","task","method","headers","body","JSON","stringify","ok","Error","handleDelete","id","concat","handleStatusChange","newStatus","completed_at","Date","toISOString","className","children","onClick","size","map","index","onStatusChange","created_at","_seconds","toLocaleString","onSubmit","type","value","onChange","_objectSpread","target","required"],"sources":["D:/Task Management/taskManager/src/components/TaskDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { PlusIcon, XIcon } from 'lucide-react';\r\nimport { Alert, AlertDescription } from './Alert';\r\nimport StatusDropdown from './statusDropdown';\r\n\r\nconst API_URL = 'http://localhost:5000/api/tasks';\r\n\r\nconst TaskDashboard = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [newTask, setNewTask] = useState({ name: '', status: 'Pending' });\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await fetch(API_URL);\r\n      const data = await response.json();\r\n      setTasks(data);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n      showNotification('Error fetching tasks!');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    const interval = setInterval(fetchTasks, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const showNotification = (message) => {\r\n    setNotification(message);\r\n    setTimeout(() => setNotification(null), 3000);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const task = {\r\n      name: newTask.name,\r\n      status: newTask.status,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(API_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(task),\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to add task');\r\n      \r\n      await fetchTasks();\r\n      setNewTask({ name: '', status: 'Pending' });\r\n      setIsModalOpen(false);\r\n      showNotification('Task added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding task:', error);\r\n      showNotification('Error adding task!');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to delete task');\r\n      \r\n      await fetchTasks();\r\n      showNotification('Task deleted successfully!');\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n      showNotification('Error deleting task!');\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (id, newStatus) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ \r\n          status: newStatus,\r\n          completed_at: newStatus === 'Completed' ? new Date().toISOString() : null\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to update task status');\r\n      \r\n      await fetchTasks();\r\n      showNotification(\r\n        newStatus === 'Completed' ? 'Task marked as completed!' : 'Task status updated!'\r\n      );\r\n    } catch (error) {\r\n      console.error('Error updating task status:', error);\r\n      showNotification('Error updating task status!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-4 sm:p-6 lg:p-8\">\r\n      {/* Header */}\r\n      <div className=\"mb-6 flex flex-col sm:flex-row sm:justify-between sm:items-center gap-4\">\r\n        <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-800\">Task Dashboard</h1>\r\n        <button\r\n          onClick={() => setIsModalOpen(true)}\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg flex items-center justify-center sm:justify-start gap-2 hover:bg-blue-700 transition w-full sm:w-auto\"\r\n        >\r\n          <PlusIcon size={20} />\r\n          Add Task\r\n        </button>\r\n      </div>\r\n\r\n      {/* Notification */}\r\n      {notification && (\r\n        <div className=\"fixed top-4 right-4 left-4 sm:left-auto z-50\">\r\n          <Alert className=\"bg-green-100 border-green-400 text-green-800\">\r\n            <AlertDescription>{notification}</AlertDescription>\r\n          </Alert>\r\n        </div>\r\n      )}\r\n\r\n      {/* Task Table/Cards */}\r\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n        <div className=\"hidden md:block\">\r\n          <table className=\"min-w-full\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\r\n                <th className=\"px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Task Name</th>\r\n                <th className=\"px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                <th className=\"px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Created At</th>\r\n                <th className=\"px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Completed At</th>\r\n                <th className=\"px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {tasks.map((task, index) => (\r\n                <tr\r\n                  key={task.id}\r\n                  className={task.status === 'Completed' ? 'line-through text-gray-400' : ''}\r\n                >\r\n                  <td className=\"px-4 sm:px-6 py-4 whitespace-nowrap text-sm\">{index + 1}</td>\r\n                  <td className=\"px-4 sm:px-6 py-4 whitespace-nowrap text-sm\">{task.name}</td>\r\n                  <td className=\"px-4 sm:px-6 py-4 whitespace-nowrap\">\r\n                    <StatusDropdown\r\n                      status={task.status}\r\n                      onStatusChange={(newStatus) => handleStatusChange(task.id, newStatus)}\r\n                    />\r\n                  </td>\r\n                  <td className=\"px-4 sm:px-6 py-4 whitespace-nowrap text-sm\">\r\n                    {task.created_at ? new Date(task.created_at._seconds * 1000).toLocaleString() : 'N/A'}\r\n                  </td>\r\n                  <td className=\"px-4 sm:px-6 py-4 whitespace-nowrap text-sm\">\r\n                    {task.completed_at ? new Date(task.completed_at._seconds * 1000).toLocaleString() : 'To be Completed'}\r\n                  </td>\r\n                  <td className=\"px-4 sm:px-6 py-4 whitespace-nowrap text-sm\">\r\n                    <button\r\n                      onClick={() => handleDelete(task.id)}\r\n                      className=\"text-red-600 hover:text-red-900\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Mobile View */}\r\n        <div className=\"md:hidden\">\r\n          {tasks.map((task, index) => (\r\n            <div\r\n              key={task.id}\r\n              className={`p-4 border-b ${task.status === 'Completed' ? 'line-through text-gray-400' : ''}`}\r\n            >\r\n              <div className=\"flex justify-between items-start mb-2\">\r\n                <div>\r\n                  <span className=\"text-sm text-gray-500\">#{index + 1}</span>\r\n                  <h3 className=\"font-medium text-gray-900\">{task.name}</h3>\r\n                </div>\r\n                <button\r\n                  onClick={() => handleDelete(task.id)}\r\n                  className=\"text-red-600 hover:text-red-900 text-sm\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n              <div className=\"flex flex-col gap-2\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-sm text-gray-500\">Status:</span>\r\n                  <StatusDropdown\r\n                    status={task.status}\r\n                    onStatusChange={(newStatus) => handleStatusChange(task.id, newStatus)}\r\n                  />\r\n                </div>\r\n                <div className=\"text-sm text-gray-500\">\r\n                  Created: {new Date().toLocaleString()}\r\n                </div>\r\n                <div className=\"text-sm text-gray-500\">\r\n                  Completed: {task.completed_at ? new Date(task.completed_at).toLocaleString() : 'To be Completed'}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Add Task Modal */}\r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h2 className=\"text-xl sm:text-2xl font-bold\">Add New Task</h2>\r\n              <button onClick={() => setIsModalOpen(false)} className=\"text-gray-500 hover:text-gray-700\">\r\n                <XIcon size={24} />\r\n              </button>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                  Task Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newTask.name}\r\n                  onChange={(e) => setNewTask({ ...newTask, name: e.target.value })}\r\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"mb-6\">\r\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                  Status\r\n                </label>\r\n                <select\r\n                  value={newTask.status}\r\n                  onChange={(e) => setNewTask({ ...newTask, status: e.target.value })}\r\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                >\r\n                  <option value=\"Pending\">Pending</option>\r\n                  <option value=\"In Progress\">In Progress</option>\r\n                  <option value=\"Completed\">Completed</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"flex flex-col sm:flex-row justify-end gap-3\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setIsModalOpen(false)}\r\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800 order-2 sm:order-1\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 order-1 sm:order-2\"\r\n                >\r\n                  Add Task\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDashboard;\r\n"],"mappings":"mHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,QAAQ,CAAEC,KAAK,KAAQ,cAAc,CAC9C,OAASC,KAAK,CAAEC,gBAAgB,KAAQ,SAAS,CACjD,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9C,KAAM,CAAAC,OAAO,CAAG,iCAAiC,CAEjD,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACe,WAAW,CAAEC,cAAc,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACiB,OAAO,CAAEC,UAAU,CAAC,CAAGlB,QAAQ,CAAC,CAAEmB,IAAI,CAAE,EAAE,CAAEC,MAAM,CAAE,SAAU,CAAC,CAAC,CACvE,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGtB,QAAQ,CAAC,IAAI,CAAC,CAEtD,KAAM,CAAAuB,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACd,OAAO,CAAC,CACrC,KAAM,CAAAe,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClCb,QAAQ,CAACY,IAAI,CAAC,CAChB,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7CE,gBAAgB,CAAC,uBAAuB,CAAC,CAC3C,CACF,CAAC,CAED7B,SAAS,CAAC,IAAM,CACdsB,UAAU,CAAC,CAAC,CACZ,KAAM,CAAAQ,QAAQ,CAAGC,WAAW,CAACT,UAAU,CAAE,IAAI,CAAC,CAC9C,MAAO,IAAMU,aAAa,CAACF,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAD,gBAAgB,CAAII,OAAO,EAAK,CACpCZ,eAAe,CAACY,OAAO,CAAC,CACxBC,UAAU,CAAC,IAAMb,eAAe,CAAC,IAAI,CAAC,CAAE,IAAI,CAAC,CAC/C,CAAC,CAED,KAAM,CAAAc,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAC,IAAI,CAAG,CACXpB,IAAI,CAAEF,OAAO,CAACE,IAAI,CAClBC,MAAM,CAAEH,OAAO,CAACG,MAClB,CAAC,CAED,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACd,OAAO,CAAE,CACpC6B,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAC3B,CAAC,CAAC,CAEF,GAAI,CAACf,QAAQ,CAACqB,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,oBAAoB,CAAC,CAEvD,KAAM,CAAAvB,UAAU,CAAC,CAAC,CAClBL,UAAU,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,MAAM,CAAE,SAAU,CAAC,CAAC,CAC3CJ,cAAc,CAAC,KAAK,CAAC,CACrBc,gBAAgB,CAAC,0BAA0B,CAAC,CAC9C,CAAE,MAAOF,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1CE,gBAAgB,CAAC,oBAAoB,CAAC,CACxC,CACF,CAAC,CAED,KAAM,CAAAiB,YAAY,CAAG,KAAO,CAAAC,EAAE,EAAK,CACjC,GAAI,CACF,KAAM,CAAAxB,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAwB,MAAA,CAAItC,OAAO,MAAAsC,MAAA,CAAID,EAAE,EAAI,CAC/CR,MAAM,CAAE,QACV,CAAC,CAAC,CAEF,GAAI,CAAChB,QAAQ,CAACqB,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuB,CAAC,CAE1D,KAAM,CAAAvB,UAAU,CAAC,CAAC,CAClBO,gBAAgB,CAAC,4BAA4B,CAAC,CAChD,CAAE,MAAOF,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5CE,gBAAgB,CAAC,sBAAsB,CAAC,CAC1C,CACF,CAAC,CAED,KAAM,CAAAoB,kBAAkB,CAAG,KAAAA,CAAOF,EAAE,CAAEG,SAAS,GAAK,CAClD,GAAI,CACF,KAAM,CAAA3B,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAwB,MAAA,CAAItC,OAAO,MAAAsC,MAAA,CAAID,EAAE,EAAI,CAC/CR,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBxB,MAAM,CAAE+B,SAAS,CACjBC,YAAY,CAAED,SAAS,GAAK,WAAW,CAAG,GAAI,CAAAE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAG,IACvE,CAAC,CACH,CAAC,CAAC,CAEF,GAAI,CAAC9B,QAAQ,CAACqB,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,8BAA8B,CAAC,CAEjE,KAAM,CAAAvB,UAAU,CAAC,CAAC,CAClBO,gBAAgB,CACdqB,SAAS,GAAK,WAAW,CAAG,2BAA2B,CAAG,sBAC5D,CAAC,CACH,CAAE,MAAOvB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnDE,gBAAgB,CAAC,6BAA6B,CAAC,CACjD,CACF,CAAC,CAED,mBACEpB,KAAA,QAAK6C,SAAS,CAAC,4CAA4C,CAAAC,QAAA,eAEzD9C,KAAA,QAAK6C,SAAS,CAAC,yEAAyE,CAAAC,QAAA,eACtFhD,IAAA,OAAI+C,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,gBAAc,CAAI,CAAC,cAChF9C,KAAA,WACE+C,OAAO,CAAEA,CAAA,GAAMzC,cAAc,CAAC,IAAI,CAAE,CACpCuC,SAAS,CAAC,mJAAmJ,CAAAC,QAAA,eAE7JhD,IAAA,CAACN,QAAQ,EAACwD,IAAI,CAAE,EAAG,CAAE,CAAC,WAExB,EAAQ,CAAC,EACN,CAAC,CAGLrC,YAAY,eACXb,IAAA,QAAK+C,SAAS,CAAC,8CAA8C,CAAAC,QAAA,cAC3DhD,IAAA,CAACJ,KAAK,EAACmD,SAAS,CAAC,8CAA8C,CAAAC,QAAA,cAC7DhD,IAAA,CAACH,gBAAgB,EAAAmD,QAAA,CAAEnC,YAAY,CAAmB,CAAC,CAC9C,CAAC,CACL,CACN,cAGDX,KAAA,QAAK6C,SAAS,CAAC,4CAA4C,CAAAC,QAAA,eACzDhD,IAAA,QAAK+C,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9B9C,KAAA,UAAO6C,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC3BhD,IAAA,UAAO+C,SAAS,CAAC,YAAY,CAAAC,QAAA,cAC3B9C,KAAA,OAAA8C,QAAA,eACEhD,IAAA,OAAI+C,SAAS,CAAC,wFAAwF,CAAAC,QAAA,CAAC,IAAE,CAAI,CAAC,cAC9GhD,IAAA,OAAI+C,SAAS,CAAC,wFAAwF,CAAAC,QAAA,CAAC,WAAS,CAAI,CAAC,cACrHhD,IAAA,OAAI+C,SAAS,CAAC,wFAAwF,CAAAC,QAAA,CAAC,QAAM,CAAI,CAAC,cAClHhD,IAAA,OAAI+C,SAAS,CAAC,wFAAwF,CAAAC,QAAA,CAAC,YAAU,CAAI,CAAC,cACtHhD,IAAA,OAAI+C,SAAS,CAAC,wFAAwF,CAAAC,QAAA,CAAC,cAAY,CAAI,CAAC,cACxHhD,IAAA,OAAI+C,SAAS,CAAC,wFAAwF,CAAAC,QAAA,CAAC,SAAO,CAAI,CAAC,EACjH,CAAC,CACA,CAAC,cACRhD,IAAA,UAAO+C,SAAS,CAAC,mCAAmC,CAAAC,QAAA,CACjD3C,KAAK,CAAC8C,GAAG,CAAC,CAACpB,IAAI,CAAEqB,KAAK,gBACrBlD,KAAA,OAEE6C,SAAS,CAAEhB,IAAI,CAACnB,MAAM,GAAK,WAAW,CAAG,4BAA4B,CAAG,EAAG,CAAAoC,QAAA,eAE3EhD,IAAA,OAAI+C,SAAS,CAAC,6CAA6C,CAAAC,QAAA,CAAEI,KAAK,CAAG,CAAC,CAAK,CAAC,cAC5EpD,IAAA,OAAI+C,SAAS,CAAC,6CAA6C,CAAAC,QAAA,CAAEjB,IAAI,CAACpB,IAAI,CAAK,CAAC,cAC5EX,IAAA,OAAI+C,SAAS,CAAC,qCAAqC,CAAAC,QAAA,cACjDhD,IAAA,CAACF,cAAc,EACbc,MAAM,CAAEmB,IAAI,CAACnB,MAAO,CACpByC,cAAc,CAAGV,SAAS,EAAKD,kBAAkB,CAACX,IAAI,CAACS,EAAE,CAAEG,SAAS,CAAE,CACvE,CAAC,CACA,CAAC,cACL3C,IAAA,OAAI+C,SAAS,CAAC,6CAA6C,CAAAC,QAAA,CACxDjB,IAAI,CAACuB,UAAU,CAAG,GAAI,CAAAT,IAAI,CAACd,IAAI,CAACuB,UAAU,CAACC,QAAQ,CAAG,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC,CAAG,KAAK,CACnF,CAAC,cACLxD,IAAA,OAAI+C,SAAS,CAAC,6CAA6C,CAAAC,QAAA,CACxDjB,IAAI,CAACa,YAAY,CAAG,GAAI,CAAAC,IAAI,CAACd,IAAI,CAACa,YAAY,CAACW,QAAQ,CAAG,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC,CAAG,iBAAiB,CACnG,CAAC,cACLxD,IAAA,OAAI+C,SAAS,CAAC,6CAA6C,CAAAC,QAAA,cACzDhD,IAAA,WACEiD,OAAO,CAAEA,CAAA,GAAMV,YAAY,CAACR,IAAI,CAACS,EAAE,CAAE,CACrCO,SAAS,CAAC,iCAAiC,CAAAC,QAAA,CAC5C,QAED,CAAQ,CAAC,CACP,CAAC,GAxBAjB,IAAI,CAACS,EAyBR,CACL,CAAC,CACG,CAAC,EACH,CAAC,CACL,CAAC,cAGNxC,IAAA,QAAK+C,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvB3C,KAAK,CAAC8C,GAAG,CAAC,CAACpB,IAAI,CAAEqB,KAAK,gBACrBlD,KAAA,QAEE6C,SAAS,iBAAAN,MAAA,CAAkBV,IAAI,CAACnB,MAAM,GAAK,WAAW,CAAG,4BAA4B,CAAG,EAAE,CAAG,CAAAoC,QAAA,eAE7F9C,KAAA,QAAK6C,SAAS,CAAC,uCAAuC,CAAAC,QAAA,eACpD9C,KAAA,QAAA8C,QAAA,eACE9C,KAAA,SAAM6C,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EAAC,GAAC,CAACI,KAAK,CAAG,CAAC,EAAO,CAAC,cAC3DpD,IAAA,OAAI+C,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CAAEjB,IAAI,CAACpB,IAAI,CAAK,CAAC,EACvD,CAAC,cACNX,IAAA,WACEiD,OAAO,CAAEA,CAAA,GAAMV,YAAY,CAACR,IAAI,CAACS,EAAE,CAAE,CACrCO,SAAS,CAAC,yCAAyC,CAAAC,QAAA,CACpD,QAED,CAAQ,CAAC,EACN,CAAC,cACN9C,KAAA,QAAK6C,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClC9C,KAAA,QAAK6C,SAAS,CAAC,mCAAmC,CAAAC,QAAA,eAChDhD,IAAA,SAAM+C,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,SAAO,CAAM,CAAC,cACtDhD,IAAA,CAACF,cAAc,EACbc,MAAM,CAAEmB,IAAI,CAACnB,MAAO,CACpByC,cAAc,CAAGV,SAAS,EAAKD,kBAAkB,CAACX,IAAI,CAACS,EAAE,CAAEG,SAAS,CAAE,CACvE,CAAC,EACC,CAAC,cACNzC,KAAA,QAAK6C,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EAAC,WAC5B,CAAC,GAAI,CAAAH,IAAI,CAAC,CAAC,CAACW,cAAc,CAAC,CAAC,EAClC,CAAC,cACNtD,KAAA,QAAK6C,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EAAC,aAC1B,CAACjB,IAAI,CAACa,YAAY,CAAG,GAAI,CAAAC,IAAI,CAACd,IAAI,CAACa,YAAY,CAAC,CAACY,cAAc,CAAC,CAAC,CAAG,iBAAiB,EAC7F,CAAC,EACH,CAAC,GA7BDzB,IAAI,CAACS,EA8BP,CACN,CAAC,CACC,CAAC,EACH,CAAC,CAGLjC,WAAW,eACVP,IAAA,QAAK+C,SAAS,CAAC,gFAAgF,CAAAC,QAAA,cAC7F9C,KAAA,QAAK6C,SAAS,CAAC,yCAAyC,CAAAC,QAAA,eACtD9C,KAAA,QAAK6C,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDhD,IAAA,OAAI+C,SAAS,CAAC,+BAA+B,CAAAC,QAAA,CAAC,cAAY,CAAI,CAAC,cAC/DhD,IAAA,WAAQiD,OAAO,CAAEA,CAAA,GAAMzC,cAAc,CAAC,KAAK,CAAE,CAACuC,SAAS,CAAC,mCAAmC,CAAAC,QAAA,cACzFhD,IAAA,CAACL,KAAK,EAACuD,IAAI,CAAE,EAAG,CAAE,CAAC,CACb,CAAC,EACN,CAAC,cACNhD,KAAA,SAAMuD,QAAQ,CAAE7B,YAAa,CAAAoB,QAAA,eAC3B9C,KAAA,QAAK6C,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBhD,IAAA,UAAO+C,SAAS,CAAC,4CAA4C,CAAAC,QAAA,CAAC,WAE9D,CAAO,CAAC,cACRhD,IAAA,UACE0D,IAAI,CAAC,MAAM,CACXC,KAAK,CAAElD,OAAO,CAACE,IAAK,CACpBiD,QAAQ,CAAG/B,CAAC,EAAKnB,UAAU,CAAAmD,aAAA,CAAAA,aAAA,IAAMpD,OAAO,MAAEE,IAAI,CAAEkB,CAAC,CAACiC,MAAM,CAACH,KAAK,EAAE,CAAE,CAClEZ,SAAS,CAAC,wFAAwF,CAClGgB,QAAQ,MACT,CAAC,EACC,CAAC,cACN7D,KAAA,QAAK6C,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBhD,IAAA,UAAO+C,SAAS,CAAC,4CAA4C,CAAAC,QAAA,CAAC,QAE9D,CAAO,CAAC,cACR9C,KAAA,WACEyD,KAAK,CAAElD,OAAO,CAACG,MAAO,CACtBgD,QAAQ,CAAG/B,CAAC,EAAKnB,UAAU,CAAAmD,aAAA,CAAAA,aAAA,IAAMpD,OAAO,MAAEG,MAAM,CAAEiB,CAAC,CAACiC,MAAM,CAACH,KAAK,EAAE,CAAE,CACpEZ,SAAS,CAAC,wFAAwF,CAAAC,QAAA,eAElGhD,IAAA,WAAQ2D,KAAK,CAAC,SAAS,CAAAX,QAAA,CAAC,SAAO,CAAQ,CAAC,cACxChD,IAAA,WAAQ2D,KAAK,CAAC,aAAa,CAAAX,QAAA,CAAC,aAAW,CAAQ,CAAC,cAChDhD,IAAA,WAAQ2D,KAAK,CAAC,WAAW,CAAAX,QAAA,CAAC,WAAS,CAAQ,CAAC,EACtC,CAAC,EACN,CAAC,cACN9C,KAAA,QAAK6C,SAAS,CAAC,6CAA6C,CAAAC,QAAA,eAC1DhD,IAAA,WACE0D,IAAI,CAAC,QAAQ,CACbT,OAAO,CAAEA,CAAA,GAAMzC,cAAc,CAAC,KAAK,CAAE,CACrCuC,SAAS,CAAC,gEAAgE,CAAAC,QAAA,CAC3E,QAED,CAAQ,CAAC,cACThD,IAAA,WACE0D,IAAI,CAAC,QAAQ,CACbX,SAAS,CAAC,kFAAkF,CAAAC,QAAA,CAC7F,UAED,CAAQ,CAAC,EACN,CAAC,EACF,CAAC,EACJ,CAAC,CACH,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAA5C,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}